<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.0.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>study.pattern.social</groupId>
	<artifactId>wechat-social-connector</artifactId>
	<version>2.0.0</version>
	<name>wechat-social-connector</name>
	<description>Demo Project for wechat Social Connector</description>
	<packaging>${project.packaging}</packaging>

	<properties>
		<java.version>1.8</java.version>
		<docker.registry>madhukargunda</docker.registry>
		<environment-name>tomcat</environment-name>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.9.2</version>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.9.2</version>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>com.github.docker-java</groupId>
			<artifactId>docker-java</artifactId>
			<version>3.2.1</version>
		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<project.packaging>jar</project.packaging>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>0.33.0</version>
						<configuration>
							<verbose>true</verbose>
							<registry>${docker.registry}</registry>
							<dockerFileDir>src/main/docker/embded-tomcat</dockerFileDir>
							<images>
								<image>
									<name>${docker.registry}/${project.artifactId}:${project.version}</name>  <!-- Name of the image which we want to build -->
									<build>
										<dockerFileDir>${project.basedir}/src/main/docker/embded-tomcat</dockerFileDir>
										<tags>
											<tag>${project.version}</tag>
											<tag>latest</tag>
										</tags>

										<assembly>
											<inline>
												<dependencySets>
													<dependencySet>
														<includes>
															<include>${project.groupId}:${project.artifactId}</include>
														</includes>
														<outputFileNameMapping>app.jar</outputFileNameMapping>
													</dependencySet>
												</dependencySets>
											</inline>
										</assembly>
									</build>
								</image>
							</images>
						</configuration>
						<executions>
							<execution>
								<id>build-docker-image</id>
								<phase>package</phase> <!-- package -->
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
							<execution>
								<id>push-docker-image</id>
								<phase>deploy</phase> <!-- deploy -->
								<goals>
									<goal>push</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
					</plugin>

				</plugins>
			</build>
		</profile>
		<profile>
			<id>war</id>
			<properties>
				<project.packaging>war</project.packaging>
			</properties>
			<build>
				<finalName>ROOT</finalName>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>0.33.0</version>
						<configuration>
							<skip>false</skip>
							<verbose>true</verbose>
							<registry>${docker.registry}</registry>
							<dockerFileDir>src/main/docker/tomcat</dockerFileDir>
							<images>
								<image>
									<name>${docker.registry}/${environment-name}/${project.artifactId}:${project.version}</name>  <!-- Name of the image which we want to build -->
									<build>
										<dockerFileDir>${project.basedir}/src/main/docker/tomcat</dockerFileDir>
										<tags>
											<tag>${project.version}</tag>
											<tag>latest</tag>
										</tags>
										<assembly>
											<inline>
												<dependencySets>
													<dependencySet>
														<includes>
															<include>${project.groupId}:${project.artifactId}</include>
														</includes>
														<outputFileNameMapping>ROOT.war</outputFileNameMapping>
													</dependencySet>
												</dependencySets>
											</inline>
										</assembly>
									</build>
								</image>
							</images>
						</configuration>
						<executions>
							<execution>
								<id>build-docker-image</id>
								<phase>package</phase> <!-- package -->
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
							<execution>
								<id>push-docker-image</id>
								<phase>deploy</phase> <!-- deploy -->
								<goals>
									<goal>push</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>dockerfile-maven-plugin</artifactId>
						<version>1.4.13</version>
						<configuration>
						<skip>true</skip>
							<useMavenSettingsForAuth>false</useMavenSettingsForAuth>
							<imageName>${docker.registry}/${environment-name}/${project.artifactId}</imageName>
							<tag>${project.version}</tag>
							<contextDirectory>src/main/docker/tomcat</contextDirectory>
							<buildArgs>
								<JAR_FILE>target/${finalName}.war</JAR_FILE>
							</buildArgs>
							<pullNewerImage>false</pullNewerImage>
							<skipDockerInfo>true</skipDockerInfo>
						</configuration>
						<executions>
							 <execution>
								<id>default</id>
								<phase>install</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-web</artifactId>
					<exclusions>
						<exclusion>
							<artifactId>spring-boot-starter-tomcat</artifactId>
							<groupId>org.springframework.boot</groupId>
						</exclusion>
					</exclusions>
				</dependency>
				<dependency>
					<groupId>javax.servlet</groupId>
					<artifactId>javax.servlet-api</artifactId>
					<version>3.1.0</version>
					<scope>provided</scope>
				</dependency>
			</dependencies>
		</profile>
	</profiles>

	<build>

	</build>
</project>
